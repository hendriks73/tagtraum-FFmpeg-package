name: Deploy

# NOTE
# secrets.OSSRH_GPG_SECRET_KEY was created with
#    gpg --export-secret-keys -a <key-id> > secret.txt
# then all newlines were replaced with literal '\n'
# see also https://gist.github.com/sualeh/ae78dc16123899d7942bc38baba5203c


on:
  push:
    branches:
      - main


jobs:

  windows-x64-build:

    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          install: mingw-w64-x86_64-toolchain
          path-type: inherit

      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - uses: actions/checkout@v2

      - name: Set up publication to Maven Central
        uses: actions/setup-java@v1
        with:
          java-version: 17
          architecture: x64
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

# use cache to transport artifacts to the next job
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build code with Maven
        run: |
          mvn --activate-profiles compile,platform-win-x64 --batch-mode install --file pom.xml

      - id: publish-native-lib-to-central
        name: Publish to Central Repository
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_TTY: $(tty)
        run: |
          mvn \
            --projects ffmpeg-x86_64-win \
            --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} \
            --activate-profiles release,platform-win-x64 \
            --file pom.xml \
            deploy

  windows-x86-build:

    runs-on: windows-2019
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw32
          install: mingw-w64-i686-toolchain
          path-type: inherit

      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - uses: actions/checkout@v2

      - name: Set up publication to Maven Central
        uses: actions/setup-java@v1
        with:
          java-version: 9
          architecture: x64
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      # use cache to transport artifacts to the next job
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build code with Maven
        run: |
          which mvn
          mvn --activate-profiles compile,platform-win-x86 --batch-mode install --file pom.xml

      - id: publish-native-lib-to-central
        name: Publish to Central Repository
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_TTY: $(tty)
        run: |
          mvn \
            --projects ffmpeg-i386-win \
            --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} \
            --activate-profiles release,platform-win-x86 \
            --file pom.xml \
            deploy


  linux-x64-build:

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v2
      - name: Install Tools
        run: |
          apt-get -y install yasm

      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - name: Set up publication to Maven Central
        uses: actions/setup-java@v1
        with:
          java-version: 17
          architecture: x64
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

# use cache to transport artifacts to the next job
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build code with Maven
        run: mvn --activate-profiles compile,platform-linux-x64 --batch-mode install --file pom.xml

      - id: publish-native-lib-to-central
        name: Publish to Central Repository
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_TTY: $(tty)
        run: |
          mvn \
            --projects ffmpeg-x86_64-unix \
            --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} \
            --activate-profiles release,platform-linux-x64 \
            --file pom.xml  \
            deploy

  macos-aarch64-build:

    runs-on: macos-10.15

    steps:
      - name: Install Tools
        run: |
          brew install yasm
      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - uses: actions/checkout@v2

      - name: Set up publication to Maven Central
        uses: actions/setup-java@v1
        with:
          java-version: 17
          architecture: x64
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

      # use cache to transport (in this case read) artifacts from prior
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build code with Maven
        run: mvn --activate-profiles compile,platform-mac-aarch64 --batch-mode install --file pom.xml

      - id: publish-native-lib-to-central
        name: Publish to Central Repository
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_TTY: $(tty)
        run: |
          mvn \
            --projects ffmpeg-aarch64-macos \
            --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} \
            --activate-profiles release,platform-mac-aarch64 \
            --file pom.xml  \
            deploy


  macos-x64-build:

    runs-on: macos-10.15

    steps:
      - name: Install Tools
        run: |
          brew install yasm
      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG

      - uses: actions/checkout@v2

      - name: Set up publication to Maven Central
        uses: actions/setup-java@v1
        with:
          java-version: 17
          architecture: x64
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD

# use cache to transport (in this case read) artifacts from prior
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build code with Maven
        run: mvn --activate-profiles compile,platform-mac-x64 --batch-mode install --file pom.xml

      - id: publish-native-lib-to-central
        name: Publish to Central Repository
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          GPG_TTY: $(tty)
        run: |
          mvn \
            --no-transfer-progress \
            --batch-mode \
            -Dgpg.passphrase=${{ secrets.OSSRH_GPG_SECRET_KEY_PASSWORD }} \
            --activate-profiles release,platform-mac-x64 \
            --file pom.xml  \
            deploy